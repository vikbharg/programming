package projecteuler;
/*
 * Highly Divisible Triangular Number
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
	
	Let us list the factors of the first seven triangle numbers:
	
	 1: 1
	 3: 1,3
	 6: 1,2,3,6
	10: 1,2,5,10
	15: 1,3,5,15
	21: 1,3,7,21
	28: 1,2,4,7,14,28
	We can see that 28 is the first triangle number to have over five divisors.
	
	What is the value of the first triangle number to have over five hundred divisors?
 */
public class Problem12 {

	public static void main(String[] args) {
		
		int limit = 500;
		int numberOfDivisors = 0;
		int naturalNumbers = 1;
		int triangleNumber = 1;
		while(numberOfDivisors < limit) {
			triangleNumber = naturalNumbers * (naturalNumbers+1)/2;
			numberOfDivisors = getNumberOfDivisors(triangleNumber);
			naturalNumbers++;
		}
		System.out.println(triangleNumber);
	}
	
	public static int getNumberOfDivisors(int number) {
		int cnt = 0;
		for (int i = 1; i <= Math.sqrt(number); i++) {
			if (number % i == 0) {
				if (number / i == i)
					cnt++;

				else
					cnt = cnt + 2;
			}
		}
		return cnt;
	}
}
